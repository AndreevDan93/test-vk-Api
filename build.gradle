plugins {
	id 'application'
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.github.ben-manes.versions' version '0.38.0'
	id 'org.liquibase.gradle' version '2.2.0'
	id 'checkstyle'
}

group = 'ru.test.testTask'
version = '0.0.1-SNAPSHOT'

application {
	mainClass = 'ru.test.testTast.TestTaskApplication'
}

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'

	annotationProcessor(
			'org.projectlombok:lombok',
			'com.querydsl:querydsl-apt:5.0.0:jakarta',
			'jakarta.persistence:jakarta.persistence-api:3.1.0'
	)

	implementation(
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-starter-actuator',
			'org.springframework.boot:spring-boot-starter-validation',
			// Зависимость для swagger
			'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0',
			'org.liquibase:liquibase-core',
			'com.querydsl:querydsl-jpa:5.0.0:jakarta',
			'com.konghq:unirest-java:3.11.12',
			'com.konghq:unirest-objectmapper-jackson:3.11.12',

	)

	liquibaseRuntime(
			sourceSets.main.output,
			'org.liquibase:liquibase-core',
			'info.picocli:picocli:4.7.1',
			'org.liquibase.ext:liquibase-hibernate6:4.21.1',
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'com.h2database:h2',

	)

	runtimeOnly (
			'com.h2database:h2',
			'org.postgresql:postgresql:42.6.0'
	)

	testImplementation(
			'org.springframework.security:spring-security-test',
			'org.springframework.boot:spring-boot-starter-test',
			'com.tobedevoured.modelcitizen:spring:0.8.3'
	)
}

liquibase {
	activities {
		main {
			// Указываем путь, по которому будет сгенерирован файл миграции
			changelogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
			// Указывем источник, с которым будут сравниваться изменения
			// Это база данных, изначально она пустая
			url 'jdbc:h2:./testTask'
			// Сравниваем с моделями, задавая пакет
			referenceUrl 'hibernate:spring:ru.test.testTask.model.' +
					// Указываем диалект
					'?dialect=org.hibernate.dialect.H2Dialect' +
					// Указываем правила именования таблиц и столбцов,
					// чтобы они соответствовали правилам Spring
					'&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy'
		}
	}
}

wrapper {
	gradleVersion = '7.6.1'
	distributionType = Wrapper.DistributionType.ALL
}

compileJava {
	options.release = 17
	options.encoding = 'UTF-8'
}

test {
	useJUnitPlatform()
}

// Настраиваем таску diffChangeLog таким образом,
// чтобы миграции учитывали изменения в моделях
diffChangelog {
	dependsOn compileJava
}

